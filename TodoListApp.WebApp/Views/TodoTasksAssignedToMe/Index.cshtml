@model IEnumerable<TodoListApp.WebApi.Models.TodoTaskFullDetailsDto>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
	<div class="form-actions no-color">
		<p>
			Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
			<input type="submit" value="Search" class="btn btn-default" /> |
			<a asp-action="Index">Back to Full List</a>
		</p>
	</div>
</form>

<table class="table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.Id)
			</th>
			<th>
				<a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">@Html.DisplayNameFor(model => model.Name)</a>
			</th>
			<th>
				<a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">@Html.DisplayNameFor(model => model.DueDate)</a>
			</th>
			<th>
				@Html.DisplayNameFor(model => model.DueDate)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Status)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.ListName)
			</th>
		</tr>
	</thead>
	<tbody>

@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DueDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ListName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
}
    </tbody>
</table>
