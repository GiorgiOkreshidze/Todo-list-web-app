@model IEnumerable<TodoListApp.WebApi.Models.TodoTaskDto>

@{
	ViewData["Title"] = "Index";
	#pragma warning disable CS8600
	#pragma warning disable CS8605

	List<TodoListApp.WebApi.Models.TagsDto> Tags = ViewData["TagsList"] as List<TodoListApp.WebApi.Models.TagsDto>;

	bool notAssignedToMeState = !(bool)ViewData["AssignedToMe"];
}

<h1>Tasks List</h1>

<h3>AllTags</h3>

<!-- Tasks Table 1 -->
<table class="table">
	<tbody>
        <tr>
			<th id="tagId"></th>
            <td>
				 @foreach (var item in Tags)
				{
					<div>
					| @Html.ActionLink(item.Name.ToString(), "Index", new { tagId = item.Id}) |
					</div>
					
				}
			</td>
			| @Html.ActionLink("Show All", "Index", new { tagId = 0}) |
        </tr>
</table>

<input type="button" value="Assign To Me" onclick="location.href='@Url.Action("Index", new { tagId = @ViewData["TagId"], assignedToMe = notAssignedToMeState})'" />

<form asp-action="Index" method="get">
	<div class="form-actions no-color">
		<p>
			Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
			<input type="submit" value="Search" class="btn btn-default" /> |
			<a asp-action="Index">Back to Full List</a>
		</p>
	</div>
</form>

<!-- Tasks Table 2 -->
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
				<a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">@Html.DisplayNameFor(model => model.Name)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
			<th>
				<a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">@Html.DisplayNameFor(model => model.DueDate)</a>
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Status)
			</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
		<tr style="@(item.DueDate < DateTime.Now ? "background:red" : "background:none")">
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
			<td>
				@Html.DisplayFor(modelItem => item.DueDate)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Status)
			</td>
            <td>
				| @Html.ActionLink("Details", "Details", new { id=item.Id, listId = ViewData["ListId"] }) |
            </td>
			<td>
				<input type="button" value="Complete" onclick="location.href='@Url.Action("MakeItDone", "TodoTask", new { id = item.Id, listId = ViewData["ListId"]})'" />
			</td>
        </tr>
}
    </tbody>
</table>
