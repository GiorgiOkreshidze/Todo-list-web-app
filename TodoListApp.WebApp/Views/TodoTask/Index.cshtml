@model IEnumerable<TodoListApp.WebApi.Models.TodoTaskDto>

@{
    ViewData["Title"] = "Index";
}

<h1>Tasks</h1>

<p>
	<a asp-action="Create" asp-route-listId="@ViewData["ListId"]">Create New Task</a>
</p>

<form asp-action="Index" asp-route-listId="@ViewData["ListId"]" method="get">
	<div class="form-actions no-color">
		<p>
			Find: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
			<a asp-action="Index" asp-route-listId="@ViewData["ListId"]">Search</a> |
			<a asp-action="Index" asp-route-listId="@ViewData["ListId"]">Back to Full List</a>
		</p>
	</div>
</form>

<!-- To-do Task Table -->
<table class="table">
	<thead>
		<tr>
			<th id="modelId">
				@Html.DisplayNameFor(model => model.Id)
			</th>
			<th id="modelName">
				<a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-listId="@ViewData["ListId"]">@Html.DisplayNameFor(model => model.Name)</a>
			</th>
			<th id="modelDecs">
				@Html.DisplayNameFor(model => model.Description)
			</th>
			<th id="modelDue">
				<a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-listId="@ViewData["ListId"]">@Html.DisplayNameFor(model => model.DueDate)</a>
			</th>
			<td>
				@Html.DisplayNameFor(model => model.Status)
			</td>
		</tr>
	</thead>
	<tbody>
@foreach (var item in Model) {
        <tr style="@(item.DueDate < DateTime.Now ? "background:red" : "background:none")">
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DueDate)
            </td>
			<td>
				@Html.DisplayFor(modelItem => item.Status)
			</td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.Id, listId = ViewData["ListId"] }) |
                @Html.ActionLink("Details", "Details", new { id=item.Id, listId = ViewData["ListId"] }) |
				@Html.ActionLink("Delete", "Delete", new { id=item.Id, listId = ViewData["ListId"] })
			</td>
			<td>
				<input type="button" value="Complete" onclick="location.href='@Url.Action("MakeItDone", "TodoTask", new { id = item.Id, listId = ViewData["ListId"]})'" />
			</td>
        </tr>
}
    </tbody>
</table>

<div>
	| @Html.ActionLink("Back to List", "Index", "TodoList",new { listId=ViewData["ListId"]}) |
</div>